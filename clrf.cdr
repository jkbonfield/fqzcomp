/*
 * Note it is up to the calling code to ensure that no overruns on input and
 * output buffers occur.
 *
 * Call the input() and output() functions to set and query the current
 * buffer locations.
 */

#define  DO(n)	   for (int _=0; _<n; _++)
#define  TOP	   (1<<24)

#define CodecName "CLRF"

typedef unsigned char uc;

class RangeCoder
{
 uint64_t low;
 uint  range, code;
 uint  cl;

public:
 char *in_buf;
 char *out_buf;

 void input (char *in)  { out_buf = in_buf = in;  }
 void output(char *out) { in_buf = out_buf = out; }
 char *input(void)  {return in_buf;}
 char *output(void) {return out_buf;}
 int size_out(void) {return out_buf - in_buf;}
 int size_in(void)  {return in_buf - out_buf;}

 void StartEncode( void )    
 { 
   low   = 0;  
   range = (uint)-1; 
 }

 void StartDecode( void )    
 {
   uc c;
   cl  = 0;
   range = (uint)-1;
   DO(8) c    = *in_buf++, 
         code = (code<<8) | c,
         cl = (cl<<1) + (c==0xFF);
          
 }

 void FinishEncode( void ) 
 { 
     DO(8) *out_buf++ = low>>56, low<<=8; 
 }

 void FinishDecode( void ) {}

 void Encode (uint cumFreq, uint freq, uint totFreq) 
 {
     range /= totFreq;
     low  += cumFreq * range;
     range*= freq;
     
     if( range<0x01000000 ) { 

	 do {
	 
	     *out_buf++ = uc(low>>56);
	     if( range<0x00010000 ) {
		 *out_buf++ = uc(low>>48);
		 if( range<0x00000100 ) {
		     *out_buf++ = uc(low>>40);
		     range<<=24, low<<=24; 
		 } else range<<=16, low<<=16; 
	     } else range<<=8, low<<=8; 

	 } while( (int(low>>32)==-1) && (range=0xFF,1) );
     }
 }

 uint GetFreq (uint totFreq) {
   return code/(range/=totFreq);
 }

 void Decode (uint cumFreq, uint freq, uint totFreq) 
 {
   code -= cumFreq * range;
   range*= freq;

   if( range<0x01000000 ) {
     uc c;

     do {

       code=(code<<8)|(c=*in_buf++),cl=(cl<<1)+((c+1U)>>8);     
       if( range<0x00010000 ) {
         code=(code<<8)|(c=*in_buf++),cl=(cl<<1)+((c+1U)>>8);     
         if( range<0x00000100 ) {
           code=(code<<8)|(c=*in_buf++),cl=(cl<<1)+((c+1U)>>8);
                  range<<=24;
         } else range<<=16;
       } else range<<=8;

     } while( (uc(cl)>=0xF0) && (range=0xFF,1) );
   }

 }

};
